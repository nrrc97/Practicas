# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import servidor_n_pb2 as servidor__n__pb2


class DataStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ServidorConexiones = channel.unary_unary(
                '/problema2_2.Data/ServidorConexiones',
                request_serializer=servidor__n__pb2.ReqServidor.SerializeToString,
                response_deserializer=servidor__n__pb2.ResConexion.FromString,
                )
        self.ConexionExitosa = channel.unary_unary(
                '/problema2_2.Data/ConexionExitosa',
                request_serializer=servidor__n__pb2.ReqConexion.SerializeToString,
                response_deserializer=servidor__n__pb2.ResConexion.FromString,
                )
        self.MSaludo = channel.unary_unary(
                '/problema2_2.Data/MSaludo',
                request_serializer=servidor__n__pb2.ReqSaludo.SerializeToString,
                response_deserializer=servidor__n__pb2.ResSaludo.FromString,
                )
        self.RemoveConexion = channel.unary_unary(
                '/problema2_2.Data/RemoveConexion',
                request_serializer=servidor__n__pb2.ReqConexion.SerializeToString,
                response_deserializer=servidor__n__pb2.ResConexion.FromString,
                )


class DataServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ServidorConexiones(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConexionExitosa(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MSaludo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveConexion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ServidorConexiones': grpc.unary_unary_rpc_method_handler(
                    servicer.ServidorConexiones,
                    request_deserializer=servidor__n__pb2.ReqServidor.FromString,
                    response_serializer=servidor__n__pb2.ResConexion.SerializeToString,
            ),
            'ConexionExitosa': grpc.unary_unary_rpc_method_handler(
                    servicer.ConexionExitosa,
                    request_deserializer=servidor__n__pb2.ReqConexion.FromString,
                    response_serializer=servidor__n__pb2.ResConexion.SerializeToString,
            ),
            'MSaludo': grpc.unary_unary_rpc_method_handler(
                    servicer.MSaludo,
                    request_deserializer=servidor__n__pb2.ReqSaludo.FromString,
                    response_serializer=servidor__n__pb2.ResSaludo.SerializeToString,
            ),
            'RemoveConexion': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveConexion,
                    request_deserializer=servidor__n__pb2.ReqConexion.FromString,
                    response_serializer=servidor__n__pb2.ResConexion.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'problema2_2.Data', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Data(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ServidorConexiones(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/problema2_2.Data/ServidorConexiones',
            servidor__n__pb2.ReqServidor.SerializeToString,
            servidor__n__pb2.ResConexion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConexionExitosa(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/problema2_2.Data/ConexionExitosa',
            servidor__n__pb2.ReqConexion.SerializeToString,
            servidor__n__pb2.ResConexion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MSaludo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/problema2_2.Data/MSaludo',
            servidor__n__pb2.ReqSaludo.SerializeToString,
            servidor__n__pb2.ResSaludo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveConexion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/problema2_2.Data/RemoveConexion',
            servidor__n__pb2.ReqConexion.SerializeToString,
            servidor__n__pb2.ResConexion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
